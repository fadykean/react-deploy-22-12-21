{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fady alkean\\\\Desktop\\\\real\\\\src\\\\components\\\\map\\\\map.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\nimport './map.css';\nimport { useSelector } from 'react-redux';\nimport { googleMapsApiKey } from '../../config.json';\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst defaultCenter = {\n  lng: 34.8909185,\n  lat: 31.7040256\n};\n\nfunction Map() {\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey\n  }); //   const [map, setMap] = React.useState(null);\n\n  const [center, setCenter] = useState(defaultCenter);\n  const products = useSelector(state => state.productReducer.products);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      let lat = position.coords.latitude;\n      let lng = position.coords.longitude;\n      setCenter({\n        lat,\n        lng\n      });\n    });\n  }, []);\n  return isLoaded ? /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, products.map(p => {\n    return /*#__PURE__*/React.createElement(Marker, {\n      position: p.position,\n      key: p.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 16\n      }\n    });\n  }), /*#__PURE__*/React.createElement(React.Fragment, null)) : /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nexport default Map;","map":{"version":3,"sources":["C:/Users/fady alkean/Desktop/real/src/components/map/map.jsx"],"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","Marker","useSelector","googleMapsApiKey","containerStyle","width","height","defaultCenter","lng","lat","Map","isLoaded","id","center","setCenter","products","state","productReducer","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","map","p"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,MAApC,QAAkD,wBAAlD;AACA,OAAO,WAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,MADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,UADe;AAEpBC,EAAAA,GAAG,EAAE;AAFe,CAAtB;;AAKA,SAASC,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAeX,cAAc,CAAC;AAClCY,IAAAA,EAAE,EAAE,mBAD8B;AAElCT,IAAAA;AAFkC,GAAD,CAAnC,CADa,CAKb;;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAACS,aAAD,CAApC;AACA,QAAMQ,QAAQ,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,cAAN,CAAqBF,QAAjC,CAA5B;AACAlB,EAAAA,SAAS,CAAC,MAAM;AACdqB,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAA0CC,QAAD,IAAc;AACrD,UAAIZ,GAAG,GAAGY,QAAQ,CAACC,MAAT,CAAgBC,QAA1B;AACA,UAAIf,GAAG,GAAGa,QAAQ,CAACC,MAAT,CAAgBE,SAA1B;AACAV,MAAAA,SAAS,CAAC;AAAEL,QAAAA,GAAF;AAAOD,QAAAA;AAAP,OAAD,CAAT;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;AAQA,SAAOG,QAAQ,gBACb,oBAAC,SAAD;AAAW,IAAA,iBAAiB,EAAEP,cAA9B;AAA8C,IAAA,MAAM,EAAES,MAAtD;AAA8D,IAAA,IAAI,EAAE,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,CAACU,GAAT,CAAcC,CAAD,IAAO;AACnB,wBAAO,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEA,CAAC,CAACL,QAApB;AAA8B,MAAA,GAAG,EAAEK,CAAC,CAACd,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFA,CADH,eAKE,yCALF,CADa,gBASb,yCATF;AAWD;;AAED,eAAeF,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { GoogleMap, useJsApiLoader, Marker } from '@react-google-maps/api';\r\nimport './map.css';\r\nimport { useSelector } from 'react-redux';\r\nimport { googleMapsApiKey } from '../../config.json';\r\nconst containerStyle = {\r\n  width: '100%',\r\n  height: '100vh',\r\n};\r\nconst defaultCenter = {\r\n  lng: 34.8909185,\r\n  lat: 31.7040256,\r\n};\r\n\r\nfunction Map() {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: 'google-map-script',\r\n    googleMapsApiKey,\r\n  });\r\n  //   const [map, setMap] = React.useState(null);\r\n  const [center, setCenter] = useState(defaultCenter);\r\n  const products = useSelector((state) => state.productReducer.products);\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      let lat = position.coords.latitude;\r\n      let lng = position.coords.longitude;\r\n      setCenter({ lat, lng });\r\n    });\r\n  }, []);\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap mapContainerStyle={containerStyle} center={center} zoom={12}>\r\n      {products.map((p) => {\r\n        return <Marker position={p.position} key={p.id} />;\r\n      })}\r\n\r\n      <></>\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n"]},"metadata":{},"sourceType":"module"}